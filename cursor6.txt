                                                               Practical No : 6
                                                               
Cursors:(All types: Implicit, Explicit, Cursor FOR Loop, Parameterized Cursor)
Write a PL/SQL block of code using parameterized Cursor that will merge the data available in the newly created table N_Roll Call with the data available in the table O_RollCall. If the data in the first table already exist in the second table then that data should be skipped.
Note: Instructor will frame the problem statement for writing PL/SQL block using all types of Cursors in line with above statement.                                                               
Query:
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| 0                  |
| borrow             |
| d2                 |
| information_schema |
| mysql              |
| officer            |
| performance_schema |
| phpmyadmin         |
| shop_db            |
| student            |
| studmarks          |
| user_form          |
+--------------------+
12 rows in set (0.00 sec)

mysql> create database O_RollCall;
Query OK, 1 row affected (0.04 sec)

mysql> use O_Rollcall;
Database changed

mysql> create table O_RollCall(rollno int, name varchar(100));
Query OK, 0 rows affected (0.05 sec)

mysql> insert into O_rollcall values(1,'Gaurav');
Query OK, 1 row affected (0.04 sec)

mysql> insert into O_rollcall values(5,'BH');
Query OK, 1 row affected (0.00 sec)

mysql> create database n_rollcall;
Query OK, 1 row affected (0.00 sec)

mysql> create table n_rollcall(rollno int, name varchar(100));
Query OK, 0 rows affected (0.01 sec)

mysql> insert into n_rollcall values(1,'Gaurav');
Query OK, 1 row affected (0.04 sec)

mysql> insert into n_rollcall values(2,'Partik');
Query OK, 1 row affected (0.04 sec)

mysql> insert into n_rollcall values(3,'Anish');
Query OK, 1 row affected (0.04 sec)


Cursor Program:

DECLARE
rn o_rollcall.rollno%type;
nm o_rollcall.name%Type;
cursor c_rollno is select * from o_rollcall minus select * from n_rollcall;
BEGIN
open c_rollno;
loop
fetch c_rollno into rn,nm;
exit when c_rollno %notfound;
insert into n_rollcall values(rn,nm);
end loop;
close c_rollno;
END;
/

select *from n_rollcall; 


old table:
ROLLNO	NAME
1	Gaurav
5	BH

New Table:

ROLLNO	NAME
1	Gaurav
2	Pratik
3	Anish

After process:
ROLLNO	NAME
1	Gaurav
2	Pratik
3	Anish
5	BH

